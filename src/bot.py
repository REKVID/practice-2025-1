import logging
from telegram.ext import Application, CommandHandler, MessageHandler, filters

from .config import BOT_TOKEN

from .handlers import (
    start_command,
    price_command,
    list_command,
    events_command,
    help_command,
)

logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO
)
logger = logging.getLogger(__name__)


async def handle_message(update, context):
    text = update.message.text

    if text == "üí∞ –¶–µ–Ω–∞ –∞–∫—Ü–∏–∏":
        await update.message.reply_text(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n/price <—Ç–∏–∫–µ—Ä>\n\n–ù–∞–ø—Ä–∏–º–µ—Ä: /price SBER"
        )
    elif text == "üìã –°–ø–∏—Å–æ–∫ –∞–∫—Ü–∏–π":
        await list_command(update, context)
    elif text == "üìÖ –≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–µ —Å–æ–±—ã—Ç–∏—è":
        await events_command(update, context)
    elif text == "‚ÑπÔ∏è –ü–æ–º–æ—â—å":
        await help_command(update, context)
    else:
        await update.message.reply_text(
            "–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥."
        )


def main() -> None:
    logger.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")

    application = Application.builder().token(BOT_TOKEN).build()

    application.add_handler(CommandHandler("start", start_command))
    application.add_handler(CommandHandler("price", price_command))
    application.add_handler(CommandHandler("list", list_command))
    application.add_handler(CommandHandler("events", events_command))
    application.add_handler(CommandHandler("help", help_command))

    application.add_handler(
        MessageHandler(
            filters.TEXT & ~filters.COMMAND & ~filters.Regex(r"^/start$"),
            handle_message,
        )
    )

    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    application.run_polling(allowed_updates=["message"])


if __name__ == "__main__":
    main()
