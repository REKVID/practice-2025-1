from telegram import Update
from telegram.ext import ContextTypes
import logging

from ..services.moex import get_top_stocks
from ..config import MOEX_TOP_STOCKS

logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO
)
logger = logging.getLogger(__name__)


async def list_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    logger.info("–ó–∞–ø—Ä–æ—à–µ–Ω —Å–ø–∏—Å–æ–∫ –∞–∫—Ü–∏–π")

    status_message = await update.message.reply_text(
        "‚è≥ –ó–∞–≥—Ä—É–∂–∞—é —Å–ø–∏—Å–æ–∫ —Ç–æ–ø-50 –∞–∫—Ü–∏–π –ø–æ –∫–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏–∏...\n"
        "–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥."
    )

    stocks = get_top_stocks(limit=MOEX_TOP_STOCKS)

    if not stocks:
        await status_message.edit_text(
            "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∞–∫—Ü–∏–π.\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        )
        return

    message = "üìã –¢–æ–ø-50 –∞–∫—Ü–∏–π –ú–æ—Å–±–∏—Ä–∂–∏ –ø–æ –∫–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏–∏:\n\n"

    for i, stock in enumerate(stocks, 1):
        message += f"{i}. {stock['ticker']}: {stock['name']}\n"

    message += "\n–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–µ–Ω—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /price <—Ç–∏–∫–µ—Ä>"

    await status_message.edit_text(message)
